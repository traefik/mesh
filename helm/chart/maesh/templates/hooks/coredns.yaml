{{- if .Values.kubedns }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: coredns
  namespace: {{ .Release.Namespace }}
  labels:
    chart: {{ include "maesh.chartLabel" . | quote }}
    release: {{ .Release.Name | quote}}
    heritage: {{ .Release.Service | quote}}
  annotations:
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": "before-hook-creation"

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
    chart: {{ include "maesh.chartLabel" . | quote }}
    release: {{ .Release.Name | quote}}
    heritage: {{ .Release.Service | quote}}
  annotations:
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-weight": "2"
    "helm.sh/hook-delete-policy": "before-hook-creation"
  name: coredns
  namespace: {{ .Release.Namespace }}
rules:
  - apiGroups:
      - ""
    resources:
      - endpoints
      - services
      - pods
      - namespaces
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
    chart: {{ include "maesh.chartLabel" . | quote }}
    release: {{ .Release.Name | quote}}
    heritage: {{ .Release.Service | quote}}
  annotations:
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-weight": "3"
    "helm.sh/hook-delete-policy": "before-hook-creation"
    rbac.authorization.kubernetes.io/autoupdate: "true"
  name: coredns
  namespace: {{ .Release.Namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: coredns
subjects:
  - kind: ServiceAccount
    name: coredns
    namespace: {{ .Release.Namespace }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: coredns
  namespace: {{ .Release.Namespace }}
  labels:
    chart: {{ include "maesh.chartLabel" . | quote }}
    release: {{ .Release.Name | quote}}
    heritage: {{ .Release.Service | quote}}
  annotations:
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-weight": "4"
    "helm.sh/hook-delete-policy": "before-hook-creation"
data:
  Corefile: |
    .:53 {
        errors
        health
        kubernetes cluster.local in-addr.arpa ip6.arpa {
          pods insecure
          upstream
          fallthrough in-addr.arpa ip6.arpa
        }
        prometheus :9153
        forward . /etc/resolv.conf
        cache 30
        loop
        reload
        loadbalance
    }

    maesh:53 {
        errors
        rewrite continue {
            name regex ([a-zA-Z0-9-_]*)\.([a-zv0-9-_]*)\.maesh maesh-{1}-{2}.maesh.svc.cluster.local
            answer name maesh-([a-zA-Z0-9-_]*)-([a-zA-Z0-9-_]*)\.maesh\.svc\.cluster\.local {1}.{2}.maesh
        }
        kubernetes cluster.local in-addr.arpa ip6.arpa {
            pods insecure
            upstream
        	fallthrough in-addr.arpa ip6.arpa
        }
        forward . /etc/resolv.conf
        cache 30
        loop
        reload
        loadbalance
    }

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: coredns
  namespace: {{ .Release.Namespace }}
  labels:
    k8s-app: coredns
    kubernetes.io/name: "CoreDNS"
    chart: {{ include "maesh.chartLabel" . | quote }}
    release: {{ .Release.Name | quote}}
    heritage: {{ .Release.Service | quote}}
  annotations:
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-weight": "4"
    "helm.sh/hook-delete-policy": "before-hook-creation"
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  selector:
    matchLabels:
      k8s-app: coredns
  template:
    metadata:
      labels:
        k8s-app: coredns
    spec:
      serviceAccountName: coredns
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: k8s-app
                      operator: In
                      values:
                        - corednss
                topologyKey: "kubernetes.io/hostname"
      tolerations:
        - key: "CriticalAddonsOnly"
          operator: "Exists"
      nodeSelector:
        beta.kubernetes.io/os: linux
      containers:
        - name: coredns
          image: coredns/coredns:1.6.3
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              memory: 170Mi
            requests:
              cpu: 100m
              memory: 70Mi
          args: [ "-conf", "/etc/coredns/Corefile" ]
          volumeMounts:
            - name: config-volume
              mountPath: /etc/coredns
              readOnly: true
          ports:
            - containerPort: 53
              name: dns
              protocol: UDP
            - containerPort: 53
              name: dns-tcp
              protocol: TCP
            - containerPort: 9153
              name: metrics
              protocol: TCP
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
                - NET_BIND_SERVICE
              drop:
                - all
            readOnlyRootFilesystem: true
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
      dnsPolicy: Default
      volumes:
        - name: config-volume
          configMap:
            name: coredns
            items:
              - key: Corefile
                path: Corefile

---
apiVersion: v1
kind: Service
metadata:
  name: coredns
  namespace: {{ .Release.Namespace }}
  labels:
    k8s-app: coredns
    kubernetes.io/name: "CoreDNS"
    kubernetes.io/cluster-service: "true"
    chart: {{ include "maesh.chartLabel" . | quote }}
    release: {{ .Release.Name | quote}}
    heritage: {{ .Release.Service | quote}}
  annotations:
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-weight": "4"
    "helm.sh/hook-delete-policy": "before-hook-creation"
    prometheus.io/port: "9153"
    prometheus.io/scrape: "true"
spec:
  selector:
    k8s-app: coredns
  type: ClusterIP
  ports:
    - name: dns
      port: 53
      protocol: UDP
    - name: dns-tcp
      port: 53
      protocol: TCP
    - name: metrics
      port: 9153
      protocol: TCP
{{- end }}
